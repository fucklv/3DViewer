
from .AbstractScriptedSegmentEditorEffect import *
from .AbstractScriptedSegmentEditorLabelEffect import *
from .AbstractScriptedSegmentEditorAutoCompleteEffect import *

from .SegmentEditorGrowFromSeedsEffect import *
from .SegmentEditorHollowEffect import *
from .SegmentEditorIslandsEffect import *
from .SegmentEditorLogicalEffect import *
from .SegmentEditorMarginEffect import *
from .SegmentEditorSmoothingEffect import *
from .SegmentEditorThresholdEffect import *

from SegmentEditorEffects import *

import logging
import importlib
import traceback
editorEffectNames = [
  "SegmentEditorGrowFromSeedsEffect",
  "SegmentEditorHollowEffect",
  "SegmentEditorIslandsEffect",
  "SegmentEditorLogicalEffect",
  "SegmentEditorMarginEffect",
  "SegmentEditorSmoothingEffect",
  "SegmentEditorThresholdEffect"
  ]

def registerEffects():
  import SegmentEditorEffects
  import traceback
  import logging
  effectsPath = SegmentEditorEffects.__path__[0].replace('\\','/')
  import qSlicerSegmentationsEditorEffectsPythonQt as qSlicerSegmentationsEditorEffects
  for editorEffectName in SegmentEditorEffects.editorEffectNames:
    try:
      instance = qSlicerSegmentationsEditorEffects.qSlicerSegmentEditorScriptedEffect(None)
      effectFilename = effectsPath+'/'+editorEffectName+'.py'
      instance.setPythonSource(effectFilename)
      instance.self().register()
    except Exception as e:
      logging.error("Error instantiating "+editorEffectName+":\n"+traceback.format_exc())
